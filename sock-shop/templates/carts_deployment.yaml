apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.carts.name }}
  labels:
    name: {{ .Values.carts.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.carts.replicaCount }}
  selector:
    matchLabels:
      name: {{ .Values.carts.name }}
  template:
    metadata:
      labels:
        name: {{ .Values.carts.name }}
    spec:
{{/*      initContainers:*/}}
{{/*        - name: wait-for-db*/}}
{{/*          image: busybox*/}}
{{/*          command:*/}}
{{/*          - 'sh'*/}}
{{/*          - '-c'*/}}
{{/*          - |*/}}
{{/*            echo "Waiting for MongoDB to be ready..."*/}}
{{/*            until nc -z -v -w30 {{ .Values.carts.name }}-db 27017; do*/}}
{{/*              echo "MongoDB not available yet, sleeping..."*/}}
{{/*              sleep 5*/}}
{{/*            done*/}}
{{/*            echo "MongoDB is available!"*/}}
      containers:
        - name: {{ .Values.carts.name }}
          image: "{{ .Values.carts.image.repository }}:{{ .Values.carts.image.tag }}"
          env:
            - name: JAVA_OPTS
              value: {{ .Values.carts.env.javaOpts }}
          resources:
            {{- toYaml .Values.carts.resources | nindent 12 }}
          ports:
            - containerPort: {{ .Values.carts.service.targetPort }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - all
              add:
                - NET_BIND_SERVICE
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}